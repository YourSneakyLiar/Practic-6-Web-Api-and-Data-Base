@page "/news-list"
@using Microsoft.EntityFrameworkCore;
@inject AuotoCatologContext context

<style>
    .news-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
        
    }

    .news {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
        border-radius: 10px;
        background-color: #98FB98;
        color: black;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
    }


        .news h4 {
            font-family: 'Arial', sans-serif;
            font-size: 1.5em;
            color: Black;
            font-weight: bold; /* Делает текст заголовка жирным */
        }

    .title {
        text-align: center;
        font-size: 2em;
        font-weight: bold;
        color: darkgreen;
        margin-bottom: 20px;
    }

    .comment {
        margin-top: 10px;
        padding: 10px;
        border-top: 1px solid #ccc;
        font-style: italic;
        display: none; /* Скрывает комментарии по умолчанию */
    }

    .show-comments {
        cursor: pointer;     
        background-color: white;
        color: darkgreen;
    }


</style>


<h3 class="title">Новости</h3>

<div class="news-container">
    @foreach (var neews in newss)
    {
        <div class="news">
            <h4>@neews.Heading</h4>
            <h6>@neews.NewsText</h6>
            <h8 style="font-style: italic;">@neews.PublicationDate</h8> <!-- Делает дату публикации курсивом -->
            <hr />


            <div class="show-comments" onclick="showComments(this)">Показать комментарии</div> <!-- Кнопка для показа комментариев -->

            @* Здесь добавляются комментарии *@
            @foreach (var comment in comments)
            {
                <div class="comment">
                    <h9>@users.FirstOrDefault(user => user.IdUser == comment.IdUser)?.Nickname</h9>
                    <p>@comment.CommentText</p>
                </div>
            }
        </div>
    }
</div>

<script>
    function showComments(button) {
        var comments = button.nextElementSibling;
        while (comments && comments.classList.contains('comment')) {
            comments.style.display = comments.style.display === 'none' ? 'block' : 'none';
            comments = comments.nextElementSibling;
        }
    }
</script>



@code {
    private List<BlazorWebServer.Models.News> newss = new List<BlazorWebServer.Models.News>();
    private List<BlazorWebServer.Models.Comment> comments = new List<BlazorWebServer.Models.Comment>();
    private List<BlazorWebServer.Models.User> users = new List<BlazorWebServer.Models.User>();  //Новый список для комментариев

    protected override async Task OnInitializedAsync()
    {
        newss = await context.News.ToListAsync();
        comments = await context.Comments.ToListAsync(); // Получение комментариев из базы данных
        users = await context.Users.ToListAsync();
    }

}


