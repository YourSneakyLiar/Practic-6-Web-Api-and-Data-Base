@page "/cars-list"
@using Microsoft.EntityFrameworkCore;
@inject AuotoCatologContext context

<style>
    .car {
        border: 1px solid black;
        margin: 10px;
        padding: 10px;
    }

        .car button {
            background-color: darkgreen;
            color: white;
            border: none;
            padding: 10px;
            margin-top: 10px;
            cursor: pointer;
        }

            .car button:hover {
                background-color: white;
                color: darkgreen;
            }

    .hidden {
        display: none;
    }
</style>

<h3>Автомобили</h3>

@foreach (var ccars in cars)
{
    <div class="car">
        <h4>Модель: @ccars.Model </h4>
        <h4>Дата выпуска: @ccars.DateOfRelease</h4>
        <h4>Тип кузова: @bodytypes.FirstOrDefault(bodytypes => bodytypes.BodyTypeId == ccars.BodyTypeId)?.BodyTypeName</h4>
        <h4>Марка автомобиля: @stams.FirstOrDefault(stams=>stams.StampId == ccars.StampId)?.StampName</h4>
        <button onclick="showCharacteristics(this)">Показать характеристики</button>
        <div class="hidden">
            <h4>Характеристики:</h4>
            <p>Высота: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.CarHeight</p>
            <p>Ширина: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.CarWidth</p>
            <p>Длина: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.CarLength</p>
            <p>Тип двигателя: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.EngineModel</p>
            <p>Мощность двигателя: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.EnginePower</p>
            <p>Количество передач: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.NumberOfGears</p>
            <p>Тип коробки передач: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.Gearbox</p>
            <p>Клиренс: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.GroundClearance</p>
            <p>Максимальная скорость: @chara.FirstOrDefault(chara=>chara.IdChar==ccars.IdChar)?.Speed</p>
        </div>
    </div>
}

@code {
    private List<Car> cars = new List<Car>();
    private List<Stamp> stams = new List<Stamp>();
    private List<BodyType> bodytypes = new List<BodyType>();
    private List<Characteristic> chara = new List<Characteristic>();

    protected override async Task OnInitializedAsync()
    {
        chara = await context.Characteristics.ToListAsync();
        stams = await context.Stamps.ToListAsync();
        cars = await context.Cars.ToListAsync();
        bodytypes = await context.BodyTypes.ToListAsync();
    }
}

<script>
    function showCharacteristics(button) {
        var characteristicsDiv = button.nextElementSibling;
        characteristicsDiv.classList.toggle('hidden');
    }
</script>