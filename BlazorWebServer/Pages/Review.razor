@page "/review-list"
@using Microsoft.EntityFrameworkCore;
@inject AuotoCatologContext context


<style>
    .rev-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-around;
    }

    .rec {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 10px;
        padding: 10px;
        border: 1px solid black;
        border-radius: 10px;
        background-color: #98FB98;
        color: black;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
    }

    .title {
        text-align: center;
        font-size: 2em;
        font-weight: bold;
        color: darkgreen;
        margin-bottom: 20px;
    }
</style>

<h3 class="title">Рекомендации от Экспертов</h3>

<div class="rev-container">
    @foreach (var review in rev)
    {
        <div class="rec">
            <h9>Автор: @users.FirstOrDefault(user => user.IdUser == review.IdUser)?.Nickname</h9>
            <hr />
            <h8>Модель автомобиля: <h9>@cars.FirstOrDefault(cars => cars.CarId == review.CarId)?.Model</h9> </h8>
            <hr />
            <h7>@review.ReviewText</h7>
            <h8>Опубликовано: @review.DateOfPublication</h8>
        </div>
    }
</div>


@code {
    private List<BlazorWebServer.Models.Review> rev = new List<BlazorWebServer.Models.Review>();
    private List<Car> cars = new List<Car>();
    private List<BlazorWebServer.Models.User> users = new List<BlazorWebServer.Models.User>();

    protected override async Task OnInitializedAsync()
    {
        cars = await context.Cars.ToListAsync();
        rev = await context.Reviews.ToListAsync();
        users = await context.Users.ToListAsync();
    }






}
